name: ClashX

on: [ push, workflow_dispatch ]

env:
  FASTLANE_SKIP_UPDATE_CHECK: true

jobs:
  build:
    runs-on: macos-13
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21.x

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: install deps
      run: |
        bash install_dependency.sh

    - name: update dev build version
      if: ${{!startsWith(github.ref, 'refs/tags/')}}
      run: |
        tag=`git describe --abbrev=0`.`date '+%m%d%H%M%S'`
        bundle exec fastlane run increment_build_number_in_plist build_number:"${tag}"  scheme:"ClashX"
        bundle exec fastlane run increment_version_number_in_plist version_number:"${tag}"  scheme:"ClashX"
        bundle exec fastlane run set_info_plist_value path:ClashX/Info.plist key:BETA value:true

    - name: update tag build version
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        tag=${GITHUB_REF##*/}
        bundle exec fastlane run set_info_plist_value path:ClashX/Info.plist key:BETA value:false
        bundle exec fastlane run increment_build_number_in_plist build_number:"${tag}"  scheme:"ClashX"
        bundle exec fastlane run increment_version_number_in_plist version_number:"${tag}"  scheme:"ClashX"

    - name: build
      env:
        CODE_SIGN_IDENTITY: "Developer ID Application: Fuzhou West2Online Internet Inc. (MEWHFZ92DY)"
      run: |
        cd ClashX
        python3 add_build_info.py
        cd ..
        bundle exec fastlane build
        echo "Checking SMJobBless Vailded"
        python3 SMJobBlessUtil.py check ClashX.app
        echo "Check done"

    - name: create dmg
      if: startsWith(github.ref, 'refs/tags/') || contains(github.event.head_commit.message, '[beta]')
      run: |
        npm install --global create-dmg
        create-dmg ClashX.app
        mv ClashX*.dmg ClashX.dmg

    - name: List, filter and delete artifacts
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/github-script@v6
      id: artifact
      with:
        script: |
          const { owner, repo } = context.issue
            
          const res = await github.rest.actions.listArtifactsForRepo({
              owner,
              repo,
          })
            
          res.data.artifacts
              .forEach(({ id }) => { github.rest.actions.deleteArtifact({ owner, repo, artifact_id: id, }) })

    - name: Upload latest artifact
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-artifact@v3
      with:
          name: ClashX.dmg
          path: ClashX.dmg
          retention-days: 30
